Use this README file to introduce your application and point to useful places in the API for learning more.
Run "rake doc:app" to generate API documentation for your models, controllers, helpers, and libraries.

# DATABASE

< - has_many
> - belongs_to
>< - has and belongs to many
< .. => - has many, through

surveys [id - name - description - status]
  < questions [id - text - choices] (accepts_nested_attributes_for :questions)
  < users

  questions [id - text]
    < responses [id - choices] (belongs_to :question, user)
      < choices [id - text]
      < response_images [id - image]
    < users => responses

users [id - name - email - password - address - city - state - zip - mobile]
  < uploads [id - image - user_id]
  < responses
  < amenities
  < problems
  < ratings [amenity - property_management - neighbourhood]



CONCERNS:
---------

1. The excel doc mentions that the user is created upon completing the survey, in this case, where would we be saving all the information collected during the survey if the creation of the user is differed till the end of the survey.

A: Save the survey at each step.

2. The questions differ widely, so implementing each of them as objects of the Question model might be challenging.

    user: :address (text), :city(string), :state(string), :zip(string), :name(string), :email(string)

    :tenancy_duration (string), 

    variables: :lobby, :rooftop_patio, :common_area, :concierge, :maintenance_staff, :superintendants (boolean) or (1-10)

    amenities: :washer_unit, :washer_building, :refrigerator, :microwave, :oven, :doorman, :elevator, :gym, :pool, :dishwasher, :heater_ac (boolean) or (1-10)

    move_in_unit_condition: :room_condition, :bathroom_condition, :kitchen_condition (string)

    management: :response, :response_fix

    rating: :amenities, :property_management, :neighborhood (rating 1 - 5)

    neighborhood: :neighborhood_likes (text), :neighborhood_dislikes (text), :neighborhood_surprise (text)

    building_best: (text) building_worst: (text)

    :winter_electricity_bill (integer) :summer_electricity_bill (integer)

    :user_complaints (text)

    :contact_willingness (boolean)

    conclusion: :referral_likeliness (string), :user_comments (text), :user_images (string)


DB design till now:
-------------------

surveys [id - name - description - status]
  < questions [id - text - choices] (accepts_nested_attributes_for :questions)
  < choices [id - text] => questions
  < responses [id - text] => choices
  < users

  questions [id - text]
    < responses [id - choices]
      < choices [id - text]
      < response_images [id - image]

users [id - full_name - email - password - address - city - state - zip - mobile]
  < uploads [id - image - user_id]
  < responses
  < amenities
  < problems
  < ratings [amenity - property_management - neighbourhood]



